#!/bin/bash
#
# Version 5
#
# (C) 2017 Daniel Faust <hessijames@gmail.com>
#
# A BASH script that transcodes all FLAC tracks of a matroska file to Ogg Vorbis
# while preserving the track's name and language and it's default and forced flags as well as its delay.
#
# Requires mktemp, mkvmerge, mkvextract, oggenc (with FLAC decoder enabled) and jq
#
# Usage:
# chmod +x mkv-transcode-flac
# ./mkv-transcode-flac "My File.mkv"
#
# This will create a new file called "My File [Ogg Vorbis].mkv".
#
# For batch converting all .mkv files in the current directoy
# copy mkv-transcode-flac to a directory in your PATH and execute:
#
# find -iname "*.mkv" -exec mkv-transcode-flac '{}' \;


if [[ "$1" == "" ]] || [[ "$1" == "--help" ]] || [[ "$1" == "-h" ]]; then
	echo
	echo "Transcode single file:"
	echo "mkv-transcode-flac file.mkv"
	echo
	echo "Transcode multiple files:"
	echo "find -iname \"*.mkv\" -exec mkv-transcode-flac '{}' \;"
	echo
	exit
fi


hash mktemp 2>/dev/null || { echo >&2 "Error: Command mktemp not found"; exit 1; }
hash mkvmerge 2>/dev/null || { echo >&2 "Error: Command mkvmerge not found"; exit 1; }
hash mkvextract 2>/dev/null || { echo >&2 "Error: Command mkvextract not found"; exit 1; }
hash oggenc 2>/dev/null || { echo >&2 "Error: Command oggenc not found"; exit 1; }
hash jq 2>/dev/null || { echo >&2 "Error: Command jq not found"; exit 1; }


verbose=1

yellow="\e[0;33m"
reset="\e[0m"

log() {
	if [ $verbose = 1 ]; then
		echo -e "\n$yellow$1$reset\n"
	fi
}


file_name=$1

tmp_dir=$(mktemp -d)

# FIXME
# trap 'rm -r "$tmp_dir"' EXIT

IFS='
'

log "LANG=en_US.utf8 LANGUAGE=en_US.utf8 mkvmerge --identify --identification-format json \"$file_name\" | jq --raw-output --compact-output \".tracks[]\""
tracks=$(LANG=en_US.utf8 LANGUAGE=en_US.utf8 mkvmerge --identify --identification-format json "$file_name" | jq --raw-output --compact-output ".tracks[]")

options=""
track_ids_string=""
for track in $tracks; do
	codec_id=$(echo "$track" | jq --raw-output ".properties.codec_id")
	track_id=$(echo "$track" | jq --raw-output ".id")
	language=$(echo "$track" | jq --raw-output ".properties.language")
	track_name=$(echo "$track" | jq --raw-output ".properties.track_name")
	default_track=$(echo "$track" | jq --raw-output ".properties.default_track")
	forced_track=$(echo "$track" | jq --raw-output ".properties.forced_track")

	ext=""
	if [[ "$track" =~ A_FLAC ]]; then
		ext="flac"
	elif [[ "$track" =~ A_PCM ]]; then
		ext="pcm"
	fi

	if [[ "$ext" == "" ]]; then
		continue
	fi

	if [[ "$track_id" == "" ]]; then
		continue
	fi

	log "mkvextract timecodes_v2 \"$file_name\" \"$track_id:$tmp_dir/$track_id.ts\""
	mkvextract timecodes_v2 "$file_name" "$track_id:$tmp_dir/$track_id.ts"

	log "mkvextract tracks \"$file_name\" \"$track_id:$tmp_dir/$track_id.$ext\""
	mkvextract tracks "$file_name" "$track_id:$tmp_dir/$track_id.$ext"

	log "oggenc --quality=6 -o \"$tmp_dir/$track_id.ogg\" \"$tmp_dir/$track_id.$ext\""
	oggenc --quality=6 -o "$tmp_dir/$track_id.ogg" "$tmp_dir/$track_id.$ext"

	log "rm \"$tmp_dir/$track_id.$ext\""
	rm "$tmp_dir/$track_id.$ext"

	track_ids_string="$track_ids_string,$track_id"
	delay=$(sed -n "2p" "$tmp_dir/$track_id.ts")

	options="$options --audio-tracks 0"
	if [[ "$track_name" != "" ]]; then
		track_name=${track_name/\\s/\ }  # replace '\s' with ' '
		track_name=${track_name/\\2/\"}  # replace '\2' with '"'
		track_name=${track_name/\\c/:}   # replace '\c' with ':'
		track_name=${track_name/\\h/#}   # replace '\h' with '#'
# 		track_name=${track_name/\\\\/\\} # replace '\\' with '\' doesn't work
		track_name=$(echo "$track_name" | sed -r 's/(flac|pcm)/Ogg Vorbis/i')
		options="$options --track-name 0:$track_name"
	fi
	if [[ "$language" != "" ]]; then
		options="$options --language 0:$language"
	fi
	if [[ "$default_track" != "" ]]; then
		options="$options --default-track 0:$default_track"
	fi
	if [[ "$forced_track" != "" ]]; then
		options="$options --forced-track 0:$forced_track"
	fi
	if [[ $delay != 0 ]]; then
		options="$options --sync 0:$delay"
	fi
	options="$options $tmp_dir/$track_id.ogg"
done
track_ids_string=${track_ids_string:1} # remove first comma

if [[ "$track_ids_string" != "" ]]; then
	# FIXME
	log "set +o histexpand"
	log "mkvmerge -o \"${file_name%.*} [Ogg Vorbis].mkv\" --audio-tracks \"!$track_ids_string\" \"$file_name\" $options"
	mkvmerge -o "${file_name%.*} [Ogg Vorbis].mkv" --audio-tracks "!$track_ids_string" "$file_name" $options
else
	echo "No flac or pcm stream found, doing nothing"
fi
